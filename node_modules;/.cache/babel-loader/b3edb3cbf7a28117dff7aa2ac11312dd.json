{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"./auth\"; // Add headers\n\napp.use(function (req, res, next) {\n  // Website you wish to allow to connect\n  res.setHeader('Access-Control-Allow-Origin', '*'); // Request methods you wish to allow\n\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE'); // Request headers you wish to allow\n\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type'); // Set to true if you need the website to include cookies in the requests sent\n  // to the API (e.g. in case you use sessions)\n\n  res.setHeader('Access-Control-Allow-Credentials', true); // Pass to next layer of middleware\n\n  next();\n});\nconst api = axios.create({\n  baseURL: \"http://localhost:3001\" //http://192.168.1.6:3000 \n\n});\napi.interceptors.request.use(async config => {\n  const token = getToken();\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\nexport default api;","map":{"version":3,"sources":["C:/reactweb/src/services/api.js"],"names":["axios","getToken","app","use","req","res","next","setHeader","api","create","baseURL","interceptors","request","config","token","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB,C,CAEA;;AACAC,GAAG,CAACC,GAAJ,CAAQ,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAEhC;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C,EAHgC,CAKhC;;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C,EANgC,CAQhC;;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C,EATgC,CAWhC;AACA;;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,kCAAd,EAAkD,IAAlD,EAbgC,CAehC;;AACAD,EAAAA,IAAI;AACL,CAjBD;AAmBA,MAAME,GAAG,GAAGR,KAAK,CAACS,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,uBADc,CAEvB;;AAFuB,CAAb,CAAZ;AAKAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBT,GAAzB,CAA6B,MAAMU,MAAN,IAAgB;AAC3C,QAAMC,KAAK,GAAGb,QAAQ,EAAtB;;AACA,MAAIa,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAAgC,UAASF,KAAM,EAA/C;AACD;;AACD,SAAOD,MAAP;AACD,CAND;AAQA,eAAeL,GAAf","sourcesContent":["import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\n// Add headers\r\napp.use(function (req, res, next) {\r\n\r\n  // Website you wish to allow to connect\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n\r\n  // Request methods you wish to allow\r\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\r\n\r\n  // Request headers you wish to allow\r\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\r\n\r\n  // Set to true if you need the website to include cookies in the requests sent\r\n  // to the API (e.g. in case you use sessions)\r\n  res.setHeader('Access-Control-Allow-Credentials', true);\r\n\r\n  // Pass to next layer of middleware\r\n  next();\r\n});\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3001\"\r\n  //http://192.168.1.6:3000 \r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}